app-id: com.cocoatech.deckr
runtime: org.gnome.Platform
runtime-version: "44"
sdk: org.gnome.Sdk
command: deckr
separate-locales: false
finish-args:
  - --share=ipc
  - --socket=fallback-x11
  - --socket=wayland
  - --device=dri
  - --share=network
  - --share=ipc
  - --talk-name=org.freedesktop.portal.Background
  - --talk-name=org.freedesktop.Notifications
  - --talk-name=org.kde.StatusNotifierWatcher
  - --filesystem=xdg-desktop
  - --filesystem=xdg-documents
  - --filesystem=xdg-download
  - --filesystem=xdg-music
  - --filesystem=xdg-pictures
  - --filesystem=xdg-videos

modules:
  - name: deckr
    buildsystem: simple
    build-commands:
      # - mkdir -p deckr
      # - tar -xf Deckr-Linux-Portable.tar.gz -C deckr
      - mv deckr /app/deckr
      - echo $(ls /app/deckr)

      - chmod +x /app/deckr/deckr
      - mkdir -p /app/bin
      - ln -s /app/deckr/deckr /app/bin/deckr

      - mv gpt /app/gpt
      - echo $(ls /app/gpt)

      - install -Dm644 com.cocoatech.deckr.metainfo.xml -t /app/share/metainfo/
      - install -Dm644 app_icon_32.png /app/share/icons/hicolor/32x32/apps/com.cocoatech.deckr.png
      - install -Dm644 app_icon_64.png /app/share/icons/hicolor/64x64/apps/com.cocoatech.deckr.png
      - install -Dm644 app_icon_128.png /app/share/icons/hicolor/128x128/apps/com.cocoatech.deckr.png
      - install -Dm644 app_icon_256.png /app/share/icons/hicolor/256x256/apps/com.cocoatech.deckr.png
      - install -Dm644 app_icon_512.png /app/share/icons/hicolor/512x512/apps/com.cocoatech.deckr.png
      - install -Dm644 com.cocoatech.deckr.desktop -t /app/share/applications/
    sources:
      - type: archive
        url: https://get.cocoatech.com/dashboard/Deckr-Linux-Portable.tar.gz
        sha256: a1f1c0e615112f3f118fc4fb4bb471aeee8799049d9757b1b52a1055113a5357
        dest: deckr

      - type: archive
        url: https://get.cocoatech.com/dashboard/gpt-libs.tar.gz
        sha256: 6cb10684780bb0e480924d89c6226c43b34491f6b936c02613add053029a0f0b
        dest: gpt

      - type: file
        path: com.cocoatech.deckr.metainfo.xml
      - type: file
        path: com.cocoatech.deckr.desktop
      - type: file
        path: icons/app_icon_32.png
      - type: file
        path: icons/app_icon_64.png
      - type: file
        path: icons/app_icon_128.png
      - type: file
        path: icons/app_icon_256.png
      - type: file
        path: icons/app_icon_512.png
      # - type: file
      #   path: Deckr-Linux-Portable.tar.gz

  - shared-modules/intltool/intltool-0.51.json

  # - shared-modules/libcanberra/libcanberra.json

  - name: ayatana-ido
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/AyatanaIndicators/ayatana-ido.git
        tag: 0.9.2

  - name: libayatana-indicator
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/AyatanaIndicators/libayatana-indicator.git
        tag: 0.9.3

  - name: libdbusmenu-gtk3
    buildsystem: autotools
    build-options:
      cflags: -Wno-error
    config-opts:
      - --with-gtk=3
      - --disable-dumper
      - --disable-static
      - --enable-tests
      - --disable-gtk-doc
      - --enable-introspection=no
      - --disable-vala
    sources:
      # https://launchpad.net/libdbusmenu/+milestone/16.04.0
      # https://launchpad.net/libdbusmenu/16.04/16.04.0/+download/libdbusmenu-16.04.0.tar.gz
      - type: archive
        url: https://launchpad.net/libdbusmenu/16.04/16.04.0/+download/libdbusmenu-16.04.0.tar.gz
        md5: 3c05d53053b3ea69384b5f93d7a4c7c4

  - name: libayatana-appindicator
    buildsystem: cmake-ninja
    config-opts:
      - -DENABLE_BINDINGS_MONO=NO
      - -DENABLE_BINDINGS_VALA=NO
    sources:
      - type: git
        url: https://github.com/AyatanaIndicators/libayatana-appindicator.git
        tag: 0.5.91

  # https://pub.dev/packages/just_audio_mpv
  # https://github.com/flathub/net.ankiweb.Anki/blob/37f151836628a9de8502c0de206e50138eb27781/net.ankiweb.Anki.yaml#L59
  - name: libass
    # mpv won't build without this
    cleanup:
      - /include
      - /lib/pkgconfig
    config-opts:
      - --disable-static
    sources:
      - type: archive
        url: https://github.com/libass/libass/releases/download/0.17.1/libass-0.17.1.tar.xz
        sha256: f0da0bbfba476c16ae3e1cfd862256d30915911f7abaa1b16ce62ee653192784

  - name: mpv
    buildsystem: simple
    cleanup:
      - /include
      - /lib/pkgconfig
    build-commands:
      - python3 waf configure --prefix=/app --enable-libmpv-shared --disable-build-date
        --disable-manpage-build --disable-alsa --enable-libarchive
        --disable-lua --disable-javascript --disable-uchardet --disable-drm --disable-dvdnav
      - python3 waf build
      - python3 waf install
    post-install:
      # save screenshots at ~/Pictures/mpv
      - echo "screenshot-directory=~/Pictures/mpv" > /app/etc/mpv/mpv.conf
    sources:
      - type: archive
        url: https://github.com/mpv-player/mpv/archive/refs/tags/v0.36.0.tar.gz
        sha256: 29abc44f8ebee013bb2f9fe14d80b30db19b534c679056e4851ceadf5a5e8bf6
      - type: file
        url: https://waf.io/waf-2.0.22
        sha256: 0a09ad26a2cfc69fa26ab871cb558165b60374b5a653ff556a0c6aca63a00df1
        dest-filename: waf
